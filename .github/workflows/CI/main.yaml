name : Flask CI/CD
on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Create Virtual Environment
      run: |
        python -m venv venv 
        source venv/bin/activate

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Print Debugging Info
      run: |
        echo "Python Version: $(python --version)"
        echo "Pip working directory: $(pwd)"
        echo "Contents of Working Directory: $(ls -l)"
        echo "Contents of Site Packages: $(ls -l venv/lib/python3.8/site-packages)"

  tests:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Create Virtual Environment
        run: |
          python -m venv venv 
          source venv/bin/activate

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: python -m unittest discover -s tests -p "test_*.py" # -s specifies the directory, -p specifies the pattern

    

  deploy:
    needs: tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Create Virtual Environment
        run: |
          python -m venv venv 
          source venv/bin/activate

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8 
        with:
          service_id: ${{ secrets.SERVICE_ID }} 
          api_key: ${{ secrets.RENDER_API_KEY }}